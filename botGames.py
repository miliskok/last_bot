import requests
import threading
from telebot import types
from menuBot import Menu, goto_menu

# -----------------------------------------------------------------------
# –≤–º–µ—Å—Ç–æ —Ç–æ–≥–æ, —á—Ç–æ –±—ã –¥–µ–ª–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –∫–ª–∞—Å—Å, –æ–±–æ–π–¥—ë–º—Å—è –±–µ–∑ –Ω–µ–≥–æ - –ø–æ–¥—É–º–∞–π—Ç–µ, –ø–æ—á–µ–º—É –∏ –∫–∞–∫
activeGames = {}  # –¢—É—Ç –±—É–¥–µ–º –Ω–∞–∫–∞–ø–ª–∏–≤–∞—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∏–≥—Ä—ã. –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞


def newGame(chatID, newGame):
    activeGames.update({chatID: newGame})
    return newGame


def getGame(chatID):
    return activeGames.get(chatID, None)


def stopGame(chatID):
    activeGames.pop(chatID, None)


# def looper(classGame):
#     if classGame.gameTimeLeft > 0:
#         classGame.gameTimeLeft -= 1
#         # print(classGame.gameTimeLeft)
#         classGame.setTextGame()
#         threading.Timer(1, looper, args=[classGame]).start()
#
# -----------------------------------------------------------------------

# -----------------------------------------------------------------------
class GameRPS_Multiplayer:
    game_duration = 10  # —Å–µ–∫.
    values = ["‚òùüèª", "‚úåüèº", "ü§üüèª", "üññüèª", "üñêüèª"]
    real_values = [1, 2, 2, 3, 5]
    result = 0
    message_to_delete = []
    name = "–ò–≥—Ä–∞ \"–ë—ã—Å—Ç—Ä—ã–π —Å—á–µ—Ç\" (–ú—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä)"
    text_rules = "<b>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –ø—Ä–∞–≤–∏–ª–∞–º:</b>\n" \
                 "–ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —ç—Ç–∞ –∏–≥—Ä–∞ —Ç–∞–∫ –∂–µ, –∫–∞–∫ ¬´–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞¬ª. " \
                 "–ò–≥—Ä–æ–∫–∏ —Å–∂–∏–º–∞—é—Ç —Ä—É–∫–∏ –≤ –∫—É–ª–∞–∫–∏, –∫–∞—á–∞—é—Ç –∏–º, —Å—á–∏—Ç–∞—é—Ç –≤—Å–ª—É—Ö, " \
                 "–∞ –ø–æ—Ç–æ–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Ä–∞–∑–∂–∏–º–∞—é—Ç –∫—É–ª–∞–∫–∏. –¢–æ–ª—å–∫–æ –≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏ " \
                 "–≤–º–µ—Å—Ç–æ –∑–Ω–∞–∫–æ–≤ –Ω—É–∂–Ω–æ –ø–∞–ª—å—Ü–∞–º–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞–∫–æ–µ-—Ç–æ —á–∏—Å–ª–æ. " \
                 "–ó–∞—Ä–∞–Ω–µ–µ –¥–æ–≥–æ–≤–æ—Ä–∏—Ç–µ—Å—å, –±—É–¥—É—Ç –∏–≥—Ä–æ–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —á–∏—Å–ª–∞ –Ω–∞ –æ–±–µ–∏—Ö " \
                 "—Ä—É–∫–∞—Ö –∏–ª–∏ –Ω–∞ –æ–¥–Ω–æ–π. –ó–∞—Ç–µ–º –∏–≥—Ä–æ–∫–∞–º –Ω—É–∂–Ω–æ –±—ã—Å—Ç—Ä–æ —Å–ª–æ–∂–∏—Ç—å —á–∏—Å–ª–∞, " \
                 "–ø–æ–∫–∞–∑–∞–Ω–Ω—ã–µ –∏–º–∏, –∏ –≤—ã–∫—Ä–∏–∫–Ω—É—Ç—å –æ—Ç–≤–µ—Ç. –ü–æ–±–µ–∂–¥–∞–µ—Ç —Ç–æ—Ç, " \
                 "–∫—Ç–æ –≤—ã–∫—Ä–∏–∫–Ω–µ—Ç –ø–µ—Ä–≤—ã–º. –î–∞, —ç—Ç–æ –Ω–µ–±–æ–ª—å—à–æ–π —É—Ä–æ–∫ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏, " \
                 "–∑–∞–º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥ –æ–±—ã—á–Ω—É—é –∏–≥—Ä—É. –° –µ–µ –ø–æ–º–æ—â—å—é –º–æ–∂–Ω–æ –æ—Ç—Ä–∞–±–æ—Ç–∞—Ç—å –∏ " \
                 "–æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è"
    # url_picRules = "https://i.ytimg.com/vi/Gvks8_WLiw0/maxresdefault.jpg"

    class Player:

        def __init__(self, playerID, playerName):
            self.id = playerID
            self.gameMessage = None
            self.name = playerName
            self.scores = 0
            self.choice = 0
            self.lastChoice = ""

        def __str__(self):
            return self.name

    def __init__(self, bot, chat_user):
        self.id = chat_user.id
        self.gameNumber = 1  # —Å—á—ë—Ç—á–∏–∫ —Å—ã–≥—Ä–∞–Ω–Ω—ã—Ö –∏–≥—Ä
        self.objBot = bot
        self.players = {}
        self.gameTimeLeft = 0
        self.objTimer = None
        self.winner = None
        self.lastWinner = None
        self.textGame = ""
        # self.addPlayer(None, "–ö–æ–º–ø—å—é—Ç–µ—Ä")
        self.addPlayer(chat_user.id, chat_user.userName)

    def addPlayer(self, playerID, playerName):
        newPlayer = self.Player(playerID, playerName)
        self.players[playerID] = newPlayer
        self.startTimer()  # –ø—Ä–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏–º —Ç–∞–π–º–µ—Ä
        self.setTextGame()
        # —Å–æ–∑–¥–∞–¥–∏–º –≤ —á–∞—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–≥—Ä–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏, –∏ —Å–æ—Ö—Ä–∞–Ω–∏–º –µ–≥–æ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        # url_picRules = self.url_picRules
        keyboard = types.InlineKeyboardMarkup()
        list_btn = []
        for i in range(len(self.values)):
            keyName = self.values[i]
            keyValue = self.real_values[i]
            list_btn.append(types.InlineKeyboardButton(text=keyName, callback_data=f"GameRPSm|Choice-{keyValue}|{Menu.setExtPar(self)}"))
        keyboard.add(*list_btn)
        list_btn = types.InlineKeyboardButton(text="–í—ã—Ö–æ–¥", callback_data="GameRPSm|Exit|" + Menu.setExtPar(self))
        keyboard.add(list_btn)
        gameMessage = self.objBot.send_message(playerID, text=self.textGame, parse_mode='HTML', reply_markup=keyboard)
        self.players[playerID].gameMessage = gameMessage
        self.sendMessagesAllPlayers([playerID])  # –æ—Ç–ø—Ä–∞–≤–∏–º –≤—Å–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–º –∏–≥—Ä–æ–∫–∞–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º –∏–≥—Ä–æ–∫–µ
        return newPlayer

    def delPlayer(self, playerID):
        print("DEL")
        remotePlayer = self.players.pop(playerID)
        try:
            self.objBot.delete_message(chat_id=remotePlayer.id, message_id=remotePlayer.gameMessage.id)
        except:
            pass
        self.objBot.send_message(chat_id=remotePlayer.id, text="–ú–Ω–µ –∂–∞–ª—å, –≤–∞—Å –≤—ã–∫–∏–Ω—É–ª–æ –∏–∑ –∏–≥—Ä—ã!")
        goto_menu(self.objBot, remotePlayer.id, "–ò–≥—Ä—ã")
        self.startSecondStage()  # –∫–∞–∫ —Ç–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫ –≤—ã—Ö–æ–¥–∏—Ç, –ø—Ä–æ–≤–µ—Ä–∏–º —Å—Ä–µ–¥–∏ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –µ—Å—Ç—å –ª–∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª—å
        if len(self.players.values()) == 0:
            stopGame(self.id)

    def getPlayer(self, chat_userID):
        return self.players.get(chat_userID)

    def newGame(self):
        self.gameNumber += 1
        self.lastWinner = self.winner
        self.winner = None
        for player in self.players.values():
            player.lastChoice = player.choice
            player.choice = None
        self.startTimer()  # –∑–∞–ø—É—Å—Ç–∏–º —Ç–∞–π–º–µ—Ä –∏–≥—Ä—ã (–µ—Å–ª–∏ —Ç–∞–π–º–µ—Ä –∞–∫—Ç–∏–≤–µ–Ω, —Å–±—Ä–æ—Å–∏–º –µ–≥–æ)

    def looper(self):
        print("LOOP", self.objTimer)
        if self.gameTimeLeft > 0:
            self.setTextGame()
            self.sendMessagesAllPlayers()
            self.gameTimeLeft -= 1
            self.objTimer = threading.Timer(1, self.looper)
            self.objTimer.start()
            print(self.objTimer.name, self.gameTimeLeft)
        else:
            delList = []
            for player in self.players.values():
                if player.choice is None:
                    delList.append(player.id)
            for idPlayer in delList:
                self.delPlayer(idPlayer)

    def startTimer(self):
        print("START")
        self.stopTimer()
        self.gameTimeLeft = self.game_duration
        self.looper()

    def stopTimer(self):
        print("STOP")
        self.gameTimeLeft = 0
        if self.objTimer is not None:
            self.objTimer.cancel()
            self.objTimer = None

    def checkEndGame(self):
        isEndGame = True
        for player in self.players.values():
            isEndGame = isEndGame and player.choice != None
        return isEndGame

    def playerChoice(self, chat_userID, —Åhoice):
        player = self.getPlayer(chat_userID)
        player.choice = —Åhoice
        self.result += int(player.choice)
        self.startSecondStage()
        self.sendMessagesAllPlayers()

    def startSecondStage(self):
        if self.checkEndGame():
            self.stopTimer()
            for player in self.players.values():
                player.lastChoice = player.choice
                message = self.objBot.send_message(chat_id=player.id, text="–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.\n")
                self.message_to_delete.append(message)
        self.setTextGame()

        # if self.checkEndGame():
        #     self.stopTimer()  # –≤—Å–µ —É—Å–ø–µ–ª–∏ —Å–¥–µ–ª–∞—Ç—å —Ö–æ–¥, —Ç–∞–π–º–µ—Ä –≤—ã–∫–ª—é—á–∞–µ–º
        #
        #     playersChoice = []
        #     for player in self.players.values():
        #         playersChoice.append(player.choice)
        #     choices = dict(zip(playersChoice, [playersChoice.count(i) for i in playersChoice]))
        #     if len(choices) == 1 or len(choices) == len(self.__class__.values):
        #         # –µ—Å–ª–∏ –≤—Å–µ –≤—ã–±—Ä–∞–ª–∏ –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ, –∏–ª–∏ –µ—Å–ª–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã - —ç—Ç–æ –Ω–∏—á—å—è
        #         self.winner = "–ù–∏—á—å—è"
        #     else:
        #         # –∫ —ç—Ç–æ–º—É –º–æ–º–µ–Ω—Ç—É –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤—Å–µ–≥–æ –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞, –Ω–∞–¥–æ –ø–æ–Ω—è—Ç—å –µ—Å—Ç—å –ª–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –æ–Ω –∏ –±—å—ë—Ç –ª–∏ –æ–Ω –¥—Ä—É–≥–∏—Ö
        #         choice1, quantity1 = choices.popitem()
        #         choice2, quantity2 = choices.popitem()
#
        #         code = choice1[0] + choice2[0]
        #         if quantity1 == 1 and code == "–ö–ù" or code == "–ë–ö" or code == "–ù–ë":
        #             choiceWiner = choice1
        #         elif quantity2 == 1 and code == "–ù–ö" or code == "–ö–ë" or code == "–ë–ù":
        #             choiceWiner = choice2
        #         else:
        #             choiceWiner = None
#
        #         if choiceWiner != None:
        #             winner = ""
        #             for player in self.players.values():
        #                 if player.choice == choiceWiner:
        #                     winner = player
        #                     winner.scores += 1
        #                     break
        #             self.winner = winner
#
        #         else:
        #             self.winner = "–ù–∏—á—å—è"
        # self.setTextGame()
#
        # if self.checkEndGame() and len(self.players) > 1:  # –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –ø–∞—Ä—Ç–∏—é —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        #     self.objTimer = threading.Timer(3, self.newGame)
        #     self.objTimer.start()

    def endGame(self):
        self.winner.scores += 1
        self.setTextGame()
        self.sendMessagesAllPlayers()
        stopGame(self.id)
        for message in self.message_to_delete:
            self.objBot.delete_message(chat_id=message.chat.id, message_id=message.id)

    def setTextGame(self):
        from prettytable import PrettyTable
        mytable = PrettyTable()
        mytable.field_names = ["–ò–≥—Ä–æ–∫", "–°—á—ë—Ç", "–í—ã–±–æ—Ä", "–†–µ–∑—É–ª—å—Ç–∞—Ç"]  # –∏–º–µ–Ω–∞ –ø–æ–ª–µ–π —Ç–∞–±–ª–∏—Ü—ã
        for player in self.players.values():
            mytable.add_row([player.name, player.scores, player.lastChoice, "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å!" if self.lastWinner == player else ""])

        textGame = self.text_rules + "\n\n"
        textGame += "<code>" + mytable.get_string() + "</code>" + "\n\n"

        if self.winner is None:
            textGame += f"–ò–¥—ë—Ç –∏–≥—Ä–∞... <b>–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞: {self.gameTimeLeft}</b>\n"
        elif self.winner == "–ù–∏—á—å—è":
            textGame += f"<b>–ù–∏—á—å—è!</b> –ü–∞—É–∑–∞ 3 —Å–µ–∫—É–Ω–¥—ã..."
        else:
            textGame += f"–í—ã–∏–≥—Ä–∞–ª: <b>{self.winner}!</b>"

        self.textGame = textGame

    def sendMessagesAllPlayers(self, excludingPlayers=()):
        try:
            for player in self.players.values():
                if player.id not in excludingPlayers:
                    textIndividual = f"\n –í–∞—à –≤—ã–±–æ—Ä: {player.choice}, –∂–¥—ë–º –æ—Å—Ç–∞–ª—å–Ω—ã—Ö!" if player.choice is not None else "\n"
                    self.objBot.edit_message_text(chat_id=player.id, message_id=player.gameMessage.id, text=self.textGame + textIndividual, parse_mode='HTML',
                                                     reply_markup=player.gameMessage.reply_markup)
        except:
            pass

# -----------------------------------------------------------------------
def callback_worker(bot, cur_user, cmd, par, call):
    chat_id = call.message.chat.id
    message_id = call.message.id

    if cmd == "newGame":
        # bot.edit_message_reply_markup(chat_id, message_id, reply_markup=None)  # —É–¥–∞–ª–∏–º –∫–Ω–æ–ø–∫–∏ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –∏–∑ —á–∞—Ç–∞
        bot.delete_message(chat_id, message_id)
        newGame(chat_id, GameRPS_Multiplayer(bot, cur_user))
        bot.answer_callback_query(call.id)

    elif cmd == "Join":
        # bot.edit_message_reply_markup(chat_id, message_id, reply_markup=None)  # —É–¥–∞–ª–∏–º –∫–Ω–æ–ø–∫–∏ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –∏–∑ —á–∞—Ç–∞
        bot.delete_message(chat_id, message_id)
        gameRSPMult = Menu.getExtPar(par)
        if gameRSPMult is None:  # –µ—Å–ª–∏ –Ω–∞—Ç–∫–Ω—É–ª–∏—Å—å –Ω–∞ –∫–Ω–æ–ø–∫—É, –∫–æ—Ç–æ—Ä–æ–π –±—ã—Ç—å –Ω–µ –¥–æ–ª–∂–Ω–æ
            return
        else:
            gameRSPMult.addPlayer(cur_user.id, cur_user.userName)
        bot.answer_callback_query(call.id)

    elif cmd == "Exit":
        bot.delete_message(chat_id, message_id)
        gameRSPMult = Menu.getExtPar(par)
        if gameRSPMult is not None:
            gameRSPMult.delPlayer(cur_user.id)
        goto_menu(bot, chat_id, "–ò–≥—Ä—ã")
        bot.answer_callback_query(call.id)

    elif "Choice-" in cmd:
        gameRSPMult = Menu.getExtPar(par)
        if gameRSPMult is None:  # –µ—Å–ª–∏ –Ω–∞—Ç–∫–Ω—É–ª–∏—Å—å –Ω–∞ –∫–Ω–æ–ø–∫—É, –∫–æ—Ç–æ—Ä–æ–π –±—ã—Ç—å –Ω–µ –¥–æ–ª–∂–Ω–æ - —É–¥–∞–ª–∏–º –µ—ë –∏–∑ —á–∞—Ç–∞
            bot.delete_message(chat_id, message_id)
        else:
            choice = cmd[7:]
            gameRSPMult.playerChoice(cur_user.id, choice)
        bot.answer_callback_query(call.id)


# -----------------------------------------------------------------------
def get_text_messages(bot, cur_user, message):
    chat_id = message.chat.id
    ms_text = message.text

    # ======================================= —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã –ë–° Multiplayer
    if ms_text == "–ò–≥—Ä–∞ \"–ë—ã—Å—Ç—Ä—ã–π —Å—á–µ—Ç\"-MP":
        keyboard = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton(text="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É", callback_data="GameRPSm|newGame")
        keyboard.add(btn)
        numGame = 0
        for game in activeGames.values():
            numGame += 1
            btn = types.InlineKeyboardButton(text="–ò–≥—Ä–∞ –ë–°-" + str(numGame) + " –∏–≥—Ä–æ–∫–æ–≤: " + str(len(game.players)), callback_data="GameRPSm|Join|" + Menu.setExtPar(game))
            keyboard.add(btn)
        btn = types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="GameRPSm|Exit")
        keyboard.add(btn)

        bot.send_message(chat_id, text=GameRPS_Multiplayer.name, reply_markup=types.ReplyKeyboardRemove())
        bot.send_message(chat_id, "–í—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É, –∏–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π?", reply_markup=keyboard)



# -----------------------------------------------------------------------
if __name__ == "__main__":
    print("–≠—Ç–æ—Ç –∫–æ–¥ –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¢–û–õ–¨–ö–û –≤ –∫–∞—á–µ—Å—Ç–≤–µ –º–æ–¥—É–ª—è!")